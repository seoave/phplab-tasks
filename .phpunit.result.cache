C:37:"PHPUnit\Runner\DefaultTestResultCache":5539:{a:2:{s:7:"defects";a:13:{s:36:"CalculatorTest::testInitialCalcState";i:5;s:38:"CalculatorTest::testAddCommandNegative";i:5;s:38:"CalculatorTest::testAddCommandPositive";i:5;s:24:"CalculatorTest::testInit";i:5;s:35:"CalculatorTest::testComputeNegative";i:5;s:35:"CalculatorTest::testComputePositive";i:5;s:37:"CalculatorTest::testGetResultPositive";i:5;s:37:"CalculatorTest::testGetResultNegative";i:5;s:26:"CalculatorTest::testReplay";i:5;s:24:"CalculatorTest::testUndo";i:5;s:38:"SubCommandCalculatorTest::testPositive";i:4;s:36:"SubCommandCalculatorTest::testMethod";i:4;s:38:"SubCommandCalculatorTest::testNegative";i:3;}s:5:"times";a:85:{s:36:"CalculatorTest::testInitialCalcState";d:0.003;s:38:"CalculatorTest::testAddCommandNegative";d:0;s:38:"CalculatorTest::testAddCommandPositive";d:0;s:24:"CalculatorTest::testInit";d:0;s:35:"CalculatorTest::testComputeNegative";d:0;s:35:"CalculatorTest::testComputePositive";d:0;s:37:"CalculatorTest::testGetResultPositive";d:0;s:37:"CalculatorTest::testGetResultNegative";d:0;s:26:"CalculatorTest::testReplay";d:0;s:24:"CalculatorTest::testUndo";d:0;s:33:"CountArgumentsTest::testArguments";d:0.001;s:40:"CountArgumentsWrapperTest::testException";d:0;s:47:"GetBrandNameTest::testPositive with data set #0";d:0;s:47:"GetBrandNameTest::testPositive with data set #1";d:0;s:47:"GetBrandNameTest::testPositive with data set #2";d:0;s:47:"GetBrandNameTest::testPositive with data set #3";d:0;s:47:"GetBrandNameTest::testPositive with data set #4";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #0";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #1";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #2";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #3";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #4";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #5";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #6";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #7";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #8";d:0;s:51:"GetMinuteQuarterTest::testPositive with data set #9";d:0;s:52:"GetMinuteQuarterTest::testPositive with data set #10";d:0;s:52:"GetMinuteQuarterTest::testPositive with data set #11";d:0;s:34:"GetMinuteQuarterTest::testNegative";d:0;s:39:"GetUniqueFirstLettersTest::testFunction";d:0.003;s:49:"GetUniqueValueTest::testPositive with data set #0";d:0;s:49:"GetUniqueValueTest::testPositive with data set #1";d:0;s:49:"GetUniqueValueTest::testPositive with data set #2";d:0;s:49:"GetUniqueValueTest::testPositive with data set #3";d:0;s:45:"GroupByTagTest::testPositive with data set #0";d:0;s:45:"GroupByTagTest::testPositive with data set #1";d:0;s:45:"IsLeapYearTest::testPositive with data set #0";d:0;s:45:"IsLeapYearTest::testPositive with data set #1";d:0;s:45:"IsLeapYearTest::testPositive with data set #2";d:0;s:45:"IsLeapYearTest::testPositive with data set #3";d:0;s:45:"IsLeapYearTest::testPositive with data set #4";d:0;s:45:"IsLeapYearTest::testPositive with data set #5";d:0;s:45:"IsLeapYearTest::testPositive with data set #6";d:0;s:45:"IsLeapYearTest::testPositive with data set #7";d:0;s:45:"IsLeapYearTest::testPositive with data set #8";d:0;s:45:"IsLeapYearTest::testPositive with data set #9";d:0;s:46:"IsLeapYearTest::testPositive with data set #10";d:0;s:46:"IsLeapYearTest::testPositive with data set #11";d:0;s:46:"IsLeapYearTest::testPositive with data set #12";d:0;s:46:"IsLeapYearTest::testPositive with data set #13";d:0;s:46:"IsLeapYearTest::testPositive with data set #14";d:0;s:46:"IsLeapYearTest::testPositive with data set #15";d:0;s:46:"IsLeapYearTest::testPositive with data set #16";d:0;s:46:"IsLeapYearTest::testPositive with data set #17";d:0;s:28:"IsLeapYearTest::testNegative";d:0;s:45:"IsSumEqualTest::testPositive with data set #0";d:0;s:45:"IsSumEqualTest::testPositive with data set #1";d:0;s:45:"IsSumEqualTest::testPositive with data set #2";d:0;s:45:"IsSumEqualTest::testPositive with data set #3";d:0;s:28:"IsSumEqualTest::testNegative";d:0;s:56:"MirrorMultibyteStringTest::testPositive with data set #0";d:0;s:56:"MirrorMultibyteStringTest::testPositive with data set #1";d:0;s:56:"MirrorMultibyteStringTest::testPositive with data set #2";d:0;s:56:"MirrorMultibyteStringTest::testPositive with data set #3";d:0;s:52:"RepeatArrayValuesTest::testPositive with data set #0";d:0;s:52:"RepeatArrayValuesTest::testPositive with data set #1";d:0;s:52:"RepeatArrayValuesTest::testPositive with data set #2";d:0;s:52:"RepeatArrayValuesTest::testPositive with data set #3";d:0;s:51:"SayHelloArgumentTest::testPositive with data set #0";d:0;s:51:"SayHelloArgumentTest::testPositive with data set #1";d:0;s:51:"SayHelloArgumentTest::testPositive with data set #2";d:0;s:42:"SayHelloArgumentWrapperTest::testException";d:0;s:43:"SayHelloTest::testPositive with data set #0";d:0;s:55:"SnakeCaseToCamelCaseTest::testPositive with data set #0";d:0;s:55:"SnakeCaseToCamelCaseTest::testPositive with data set #1";d:0;s:55:"SnakeCaseToCamelCaseTest::testPositive with data set #2";d:0;s:38:"SubCommandCalculatorTest::testPositive";d:0;s:52:"SumCommandTest::testCommandPositive with data set #0";d:0;s:52:"SumCommandTest::testCommandPositive with data set #1";d:0;s:52:"SumCommandTest::testCommandPositive with data set #2";d:0;s:52:"SumCommandTest::testCommandPositive with data set #3";d:0;s:35:"SumCommandTest::testCommandNegative";d:0;s:36:"SubCommandCalculatorTest::testMethod";d:0.004;s:38:"SubCommandCalculatorTest::testNegative";d:0.001;}}}